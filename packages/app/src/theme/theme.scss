/*
 * Global application theme.
 * Framework overrides and customization goes here.
 */
// Angular Material theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$my-app-primary: mat-palette($mat-blue-grey);
$my-app-accent: mat-palette($mat-pink);

// The warn palette is optional (defaults to red).
$my-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$my-app-theme: mat-light-theme($my-app-primary, $my-app-accent, $my-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($my-app-theme);

body,
html {
  height: 100%;
  margin: 0;
  font-size: $font-size;
}

// No easy way to use custom font with Angular Material 2 at the moment
// See this: https://github.com/angular/material2/issues/724
// Amd this: https://github.com/angular/material2/issues/205
body *:not(mat-icon) {
  font-family: $primary-font !important;
  -webkit-font-smoothing: antialiased;
}

/*
 * Dragula related CSS
 * https://github.com/valor-software/ng2-dragula#3-add-the-css-to-your-project
 */

/* in-flight clone */
.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
  pointer-events: none;
}
/* high-performance display:none; helper */
.gu-hide {
  left: -9999px !important;
}
/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}
/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}

// Quill related
.ql-toolbar.ql-snow {
  border: none !important;
}

.ql-container.ql-snow {
  border: none !important;
}

.ql-editor {
  font-size: 1.1rem;
  line-height: 1.8rem;
}

.ql-container.ql-snow {
  overflow: auto !important;
}

.ql-toolbar.ql-snow {
  background: #fafafa !important;
}

// Project specific

.spacer {
  flex: 1 1 auto;
}

.disabled {
  color: rgba(255, 255, 255, 0.3) !important;
}

.add-project-dialog,
.add-page-dialog {
  .mat-dialog-container {
    height: 100%;
    width: 500px;
    border-radius: 10px;
    padding-top: 18px;
    padding-bottom: 32px;
  }
}

mat-toolbar {
  height: $toolbar-height !important;
}
